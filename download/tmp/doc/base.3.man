NAME

   base(3f) - [M_strings] convert whole number string in base [2-36] to string in alternate base [2-36]

SYNOPSIS

  logical function base(x,b,y,a)

   character(len=*),intent(in)  :: x
   character(len=*),intent(out) :: y
   integer,intent(in)           :: b,a

DESCRIPTION

   Convert a numeric string from base b1 to base b2. The function returns
   FALSE if b not in [2..36] or if string x contains invalid
   characters in base b or if result y is too big

   The letters A,B,...,Z represent 10,11,...,36 in the base > 10.

EXAMPLE
  Sample program:

   program demo_base
   use M_strings, only : base
   implicit none
   integer           :: ba,bd
   character(len=40) :: x,y
   integer           :: r

   print *,' BASE CONVERSION'
   write(*,'("Start   Base (2 to 36): ")',advance='no'); read *, bd
   write(*,'("Arrival Base (2 to 36): ")',advance='no'); read *, ba
   INFINITE: do
      write(*,'("Enter number in start base: ")',advance='no'); read *, x
      if(x.eq.'0') exit INFINITE
      if(base(x,bd,y,ba)then
           write(*,'("In base ",I2,": ",A20)')  ba, y
       else
         print *,'Error in decoding/encoding number.'
       endif
    enddo INFINITE

    end program demo_base

