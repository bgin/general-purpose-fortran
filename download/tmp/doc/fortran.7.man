NAME
   fortran(7f) - [FORTRAN] Fortran Example
SYNOPSIS
   array_constructors (7f) - [FORTRAN] An array constructor can be used to create and assign values to rank-one arrays (and array con...
   backspace (7)         [FORTRAN:FILE_POSITIONING] - backspace one record on specified I/O unit
   block (7)             [FORTRAN:EXECUTION CONTROL] construct
   case (7)              [FORTRAN:EXECUTION CONTROL] masked array assignment
   continue (7)          [FORTRAN:EXECUTION CONTROL] construct
   cycle (7)             [FORTRAN:EXECUTION CONTROL] construct
   data (7)              [FORTRAN] DATA statement
   do (7)                [FORTRAN:EXECUTION CONTROL] construct
   endselect (7)         [FORTRAN:EXECUTION CONTROL] masked array assignment
   exit (7)              [FORTRAN:EXECUTION CONTROL] statement
   flush (7)             [FORTRAN:IO] flush I/O buffers of specified files
   fortran_continuation_line (7)  [FORTRAN] Fortran Continuation Lines
   if (7)                  [FORTRAN:EXECUTION CONTROL] selects a block based on a sequence of logical expressions.
   implicit (7)            [FORTRAN:STATEMENT] specify default type (if any) associated to a starting letter
   implied_do (7)          [FORTRAN] documentation on usage of implied do in Fortran
   include (7)             [FORTRAN] including source text
   initialize_arrays (7)   [FORTRAN:FAQ] Initializing small 2D numeric arrays with array constructors
   inquire(7f)             [FORTRAN:FILE_INQUIRE] File inquiry statement
   intrinsics (7)          [FORTRAN]intrinsic man(1) pages
   intrinsics_project (7)  [FORTRAN] intrinsic man(1) pages
   namelist (7)          [FORTRAN:STATEMENT] specify a group of data to be referred to by a single name in data input/output
   nullify (7)           [FORTRAN:STATEMENT] causes pointers to be disassociated
   open (7)              [FORTRAN:I/O] Initiates or modifies a connection between an external file and a specified unit.
   save (7)              [FORTRAN:STATEMENT:ATTRIBUTE] specifies that a local variable retains its status and value after a RETURN
   scratch (7)           [FORTRAN:OPEN] where scratch files are typically written by OPEN(3f)
   select (7)            [FORTRAN:EXECUTION CONTROL] masked array assignment
   sign (7)              [FORTRAN:IO] option to force optional plus sign on output values
   stop (7)              [FORTRAN:STATEMENT] initiates termination of execution
   use (7)               [FORTRAN] gives a program unit accessibility to public entities in a module.
   where (7)             [FORTRAN:ASSIGNMENT] masked array assignment

   abs (3)               [INTRINSIC:NUMERIC] Absolute value
   achar (3)             [INTRINSIC:CHARACTER] returns a character in a specified position in the ASCII collating sequence
   acos (3)              [INTRINSIC:TRIGONOMETRIC] Arccosine function
   acosh (3)             [INTRINSIC:TRIGONOMETRIC] Inverse hyperbolic cosine function
   adjustl (3)           [INTRINSIC:CHARACTER] Left adjust a string
   adjustr (3)           [INTRINSIC:CHARACTER] Right adjust a string
   aimag (3)             [INTRINSIC:NUMERIC] Imaginary part of complex number
   aint (3)              [INTRINSIC:NUMERIC] Truncate to a whole number
   all (3)               [INTRINSIC:TRANSFORMATIONAL FUNCTION] determines if all the values are true
   allocated (3)         [INTRINSIC:ARRAY INQUIRY] Status of an allocatable entity
   anint (3)             [INTRINSIC:NUMERIC] Nearest whole number
   any (3)               [INTRINSIC:TRANSFORMATIONAL FUNCTION] determines if any of the values in the logical array are true.
   asin (3)              [INTRINSIC:TRIGONOMETRIC] Arcsine function
   asinh (3)             [INTRINSIC:TRIGONOMETRIC] Inverse hyperbolic sine function
   associated (3)        [INTRINSIC] Status of a pointer or pointer/target pair
   atan (3)              [INTRINSIC:TRIGONOMETRIC] Arctangent function
   atan2 (3)             [INTRINSIC:TRIGONOMETRIC] Arctangent function
   atanh (3)             [INTRINSIC:TRIGONOMETRIC] Inverse hyperbolic tangent function
   atomic_add (3)        [INTRINSIC] Atomic ADD operation
   atomic_and (3)        [INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise AND operation
   atomic_cas (3)        [INTRINSIC] Atomic compare and swap
   atomic_define (3)     [INTRINSIC] Setting a variable atomically
   atomic_fetch_add (3)  [INTRINSIC] Atomic ADD operation with prior fetch
   atomic_fetch_and (3)  [INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise AND operation with prior fetch
   atomic_fetch_or (3)   [INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise OR operation with prior fetch
   atomic_fetch_xor (3)  [INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise XOR operation with prior fetch
   atomic_or (3)         [INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise OR operation
   atomic_ref (3)        [INTRINSIC] Obtaining the value of a variable atomically
   atomic_xor (3)        [INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise OR operation
   bessel_j0 (3)         [INTRINSIC:MATHEMATICS] Bessel function of the first kind of order 0
   bessel_j1 (3)         [INTRINSIC:MATHEMATICS] Bessel function of the first kind of order 1
   bessel_jn (3)         [INTRINSIC:MATHEMATICS] Bessel function of the first kind
   bessel_y0 (3)         [INTRINSIC:MATHEMATICS] Bessel function of the second kind of order 0
   bessel_y1 (3)         [INTRINSIC:MATHEMATICS] Bessel function of the second kind of order 1
   bessel_yn (3)         [INTRINSIC:MATHEMATICS] Bessel function of the second kind
   bge (3)               [INTRINSIC:BIT COMPARE] Bitwise greater than or equal to
   bgt (3)               [INTRINSIC:BIT COMPARE] Bitwise greater than
   bit_size (3)          [INTRINSIC:BIT INQUIRY] Bit size inquiry function
   ble (3)               [INTRINSIC:BIT COMPARE] Bitwise less than or equal to
   blt (3)               [INTRINSIC:BIT COMPARE] Bitwise less than
   btest (3)             [INTRINSIC:BIT MANIPULATION] Bit test function
   c_associated (3)      [INTRINSIC:ISO_C_BINDING] Status of a C pointer
   c_f_pointer (3)       [INTRINSIC:ISO_C_BINDING] Convert C into Fortran pointer
   c_f_procpointer (3)   [INTRINSIC:ISO_C_BINDING] Convert C into Fortran procedure pointer
   c_funloc (3)          [INTRINSIC:ISO_C_BINDING] Obtain the C address of a procedure
   c_loc (3)             [INTRINSIC:ISO_C_BINDING] Obtain the C address of an object
   c_sizeof (3)          [INTRINSIC:ISO_C_BINDING] Size in bytes of an expression
   ceiling (3)           [INTRINSIC:NUMERIC] Integer ceiling function
   char (3)              [INTRINSIC:CHARACTER] Character conversion function
   cmplx (3)             [INTRINSIC:NUMERIC] Complex conversion function
   co_broadcast (3)      [INTRINSIC] Copy a value to all images the current set of images
   co_lbound (3)         [INTRINSIC] Lower codimension bounds of an array
   co_max (3)            [INTRINSIC] Maximal value on the current set of images
   co_min (3)            [INTRINSIC] Minimal value on the current set of images
   co_reduce (3)         [INTRINSIC] Reduction of values on the current set of images
   co_sum (3)            [INTRINSIC] Sum of values on the current set of images
   co_ubound (3)         [INTRINSIC] Upper codimension bounds of an array
   command_argument_count (3)  [INTRINSIC:SYSTEM ENVIRONMENT] Get number of command line arguments
   compiler_options (3)  [INTRINSIC] Options passed to the compiler
   compiler_version (3)  [INTRINSIC] Compiler version string
   conjg (3)             [INTRINSIC:NUMERIC] Complex conjugate function
   cos (3)               [INTRINSIC:TRIGONOMETRIC] Cosine function
   cosh (3)              [INTRINSIC:TRIGONOMETRIC] Hyperbolic cosine function
   count (3)             [INTRINSIC:TRANSFORMATIONAL FUNCTION] Count function
   cpu_time (3)          [INTRINSIC:SYSTEM ENVIRONMENT] return CPU processor time in seconds
   cshift (3)            [INTRINSIC:TRANSFORMATIONAL FUNCTION] Circular shift elements of an array
   date_and_time (3)     [INTRINSIC:SYSTEM ENVIRONMENT] gets current time
   dble (3)              [INTRINSIC:NUMERIC] Double conversion function
   digits (3)            [INTRINSIC] Significant digits function
   dim (3)               [INTRINSIC:NUMERIC] Positive difference
   dot_product (3)       [INTRINSIC:TRANSFORMATIONAL FUNCTION] Dot product function
   dprod (3)             [INTRINSIC:NUMERIC] Double product function
   dshiftl (3)           [INTRINSIC:BIT MANIPULATION] combines bits of arguments I and J
   dshiftr (3)           [INTRINSIC:BIT MANIPULATION] combines bits of arguments I and J
   eoshift (3)           [INTRINSIC:TRANSFORMATIONAL FUNCTION] End-off shift elements of an array
   epsilon (3)           [INTRINSIC] Epsilon function
   erf (3)               [INTRINSIC:MATHEMATICS] Error function
   erfc (3)              [INTRINSIC:MATHEMATICS] Complementary error function
   erfc_scaled (3)       [INTRINSIC:MATHEMATICS] Error function
   event_query (3)       [INTRINSIC] Query whether a coarray event has occurred
   execute_command_line (3)  [INTRINSIC:SYSTEM ENVIRONMENT] Execute a shell command
   exp (3)               [INTRINSIC:MATHEMATICS] Exponential function
   exponent (3)          [INTRINSIC:MODEL_COMPONENTS] Exponent function
   extends_type_of (3)   [FORTRAN:INTRINSIC] True if and only if the dynamic type of A is an extension of the dynamic type of MOLD.
   findloc (3)           [FORTRAN:INTRINSIC] Location of the first element of ARRAY identified by MASK along dimension DIM having a...
   float (3)             [INTRINSIC] Convert integer to default real
   floor (3)             [INTRINSIC:NUMERIC] Integer floor function
   fraction (3)          [INTRINSIC:MODEL_COMPONENTS] Fractional part of the model representation
   gamma (3)             [INTRINSIC:MATHEMATICS] Gamma function
   get_command (3)       [INTRINSIC:SYSTEM ENVIRONMENT] Get the entire command line
   get_command_argument (3)  [INTRINSIC:SYSTEM ENVIRONMENT] Get command line arguments
   get_environment_variable (3)  [INTRINSIC:SYSTEM ENVIRONMENT] Get an environmental variable
   huge (3)              [INTRINSIC] Largest number of a kind
   hypot (3)             [INTRINSIC:MATHEMATICS] Euclidean distance function
   iachar (3)            [INTRINSIC:CHARACTER] Code in ASCII collating sequence
   iall (3)              [INTRINSIC:BIT MANIPULATION] Bitwise and of array elements
   iand (3)              [INTRINSIC:BIT MANIPULATION] Bitwise logical and
   iany (3)              [INTRINSIC:BIT MANIPULATION] Bitwise or of array elements
   ibclr (3)             [INTRINSIC:BIT MANIPULATION] Clear bit
   ibits (3)             [INTRINSIC:BIT MANIPULATION] Bit extraction
   ibset (3)             [INTRINSIC:BIT MANIPULATION] Set bit
   ichar (3)             [INTRINSIC:CHARACTER] Character-to-integer conversion function
   ieor (3)              [INTRINSIC:BIT MANIPULATION] Bitwise logical exclusive or
   image_index (3)       [INTRINSIC] Cosubscript to image index conversion
   index (3)             [INTRINSIC:CHARACTER] Position of a substring within a string
   int (3)               [INTRINSIC:NUMERIC] Convert to integer type
   intrinsics (1)        [FUNIX] output text versions of Fortran intrinsic man(1) pages
   intrinsics (7)        [FORTRAN]intrinsic man(1) pages
   intrinsics_project (7)  [FORTRAN] intrinsic man(1) pages
   ior (3)               [INTRINSIC:BIT MANIPULATION] Bitwise logical inclusive or
   iparity (3)           [INTRINSIC:BIT MANIPULATION] Bitwise exclusive or of array elements
   is_contiguous (3)     [INTRINSIC:ARRAY INQUIRY] test if object is contiguous
   is_iostat_end (3)     [INTRINSIC] True if and only if a value indicates an end-of-file condition.
   is_iostat_eor (3)     [INTRINSIC] True if and only if a value indicates an end-of-record condition.
   ishft (3)             [INTRINSIC:BIT MANIPULATION] Shift bits
   ishftc (3)            [INTRINSIC:BIT MANIPULATION] Shift bits circularly
   kind (3)              [INTRINSIC] Kind of an entity
   lbound (3)            [INTRINSIC:ARRAY INQUIRY] Lower dimension bounds of an array
   lcobound (3)          [INTRINSIC] Lower codimension bounds of an array
   leadz (3)             [INTRINSIC:BIT INQUIRY] Number of leading zero bits of an integer
   len (3)               [INTRINSIC:CHARACTER] Length of a character entity
   len_trim (3)          [INTRINSIC:CHARACTER] Length of a character entity without trailing blank characters
   lge (3)               [INTRINSIC:CHARACTER] Lexical greater than or equal
   lgt (3)               [INTRINSIC:CHARACTER] Lexical greater than
   lle (3)               [INTRINSIC:CHARACTER] Lexical less than or equal
   llt (3)               [INTRINSIC:CHARACTER] Lexical less than
   log (3)               [INTRINSIC:MATHEMATICS] Logarithm function
   log10 (3)             [INTRINSIC:MATHEMATICS] Base 10 logarithm function
   log_gamma (3)         [INTRINSIC:MATHEMATICS] Logarithm of the Gamma function
   logical (3)           [INTRINSIC:BIT MANIPULATION] Bitwise logical and
   maskl (3)             [INTRINSIC] Left justified mask
   maskr (3)             [INTRINSIC] Right justified mask
   matmul (3)            [INTRINSIC:TRANSFORMATIONAL FUNCTION] matrix multiplication
   max (3)               [INTRINSIC:NUMERIC] Maximum value of an argument list
   maxexponent (3)       [INTRINSIC] Maximum exponent of a real kind
   maxloc (3)            [INTRINSIC:TRANSFORMATIONAL FUNCTION] Location of the maximum value within an array
   maxval (3)            [INTRINSIC:TRANSFORMATIONAL FUNCTION] determines the maximum value in an array or row
   merge (3)             [INTRINSIC:ARRAY CONSTRUCTION] Merge variables
   merge_bits (3)        [INTRINSIC:BIT MANIPULATION] Merge of bits under mask
   min (3)               [INTRINSIC:NUMERIC] Minimum value of an argument list
   minexponent (3)       [INTRINSIC] Minimum exponent of a real kind
   minloc (3)            [INTRINSIC:TRANSFORMATIONAL FUNCTION] Location of the minimum value within an array
   minval (3)            [INTRINSIC:TRANSFORMATIONAL FUNCTION] Minimum value of an array
   mod (3)               [INTRINSIC:NUMERIC] Remainder function
   modulo (3)            [INTRINSIC:NUMERIC] Modulo function
   move_alloc (3)        [INTRINSIC] Move allocation from one object to another
   mvbits (3)            [INTRINSIC:BIT MANIPULATION] Move bits from one integer to another
   nearest (3)           [INTRINSIC:MODEL_COMPONENTS] Nearest representable number
   new_line (3)          [INTRINSIC] New line character
   nint (3)              [INTRINSIC:NUMERIC] Nearest whole number
   norm2 (3)             [INTRINSIC:MATHEMATICS] Euclidean vector norm
   not (3)               [INTRINSIC:BIT MANIPULATION] Logical negation
   null (3)              [INTRINSIC:TRANSFORMATIONAL FUNCTION] Function that returns an disassociated pointer
   num_images (3)        [INTRINSIC] Number of images
   pack (3)              [INTRINSIC:ARRAY CONSTRUCTION] Pack an array into an array of rank one
   parity (3)            [INTRINSIC:TRANSFORMATIONAL FUNCTION] Reduction with exclusive OR()
   popcnt (3)            [INTRINSIC:BIT INQUIRY] Number of bits set
   poppar (3)            [INTRINSIC:BIT INQUIRY] Parity of the number of bits set
   precision (3)         [INTRINSIC] Decimal precision of a real kind
   present (3)           [INTRINSIC] Determine whether an optional dummy argument is specified
   product (3)           [INTRINSIC:TRANSFORMATIONAL FUNCTION] Product of array elements
   radix (3)             [INTRINSIC] Base of a model number
   random_number (3)     [INTRINSIC] Pseudo-random number
   random_seed (3)       [INTRINSIC] Initialize a pseudo-random number sequence
   range (3)             [INTRINSIC] Decimal exponent range of a real kind
   rank (3)              [INTRINSIC:ARRAY INQUIRY] Rank of a data object
   real (3)              [INTRINSIC:NUMERIC] Convert to real type
   repeat (3)            [INTRINSIC:CHARACTER] Repeated string concatenation
   reshape (3)           [INTRINSIC:ARRAY RESHAPE] Function to reshape an array
   rrspacing (3)         [INTRINSIC:MODEL_COMPONENTS] Reciprocal of the relative spacing
   same_type_as (3)      [INTRINSIC] Query dynamic types for equality
   scale (3)             [INTRINSIC:MODEL_COMPONENTS] Scale a real value
   scan (3)              [INTRINSIC:CHARACTER] Scan a string for the presence of a set of characters
   selected_char_kind (3)  [INTRINSIC] Choose character kind
   selected_int_kind (3)  [INTRINSIC] Choose integer kind
   selected_real_kind (3)  [INTRINSIC] Choose real kind
   set_exponent (3)      [INTRINSIC:MODEL_COMPONENTS] Set the exponent of the model
   shape (3)             [INTRINSIC:ARRAY INQUIRY] Determine the shape of an array
   shifta (3)            [INTRINSIC:BIT MANIPULATION] shift bits right with fill
   shiftl (3)            [INTRINSIC:BIT MANIPULATION] shift bits left
   shiftr (3)            [INTRINSIC:BIT MANIPULATION] shift bits right
   sign (3)              [INTRINSIC:NUMERIC] Sign copying function
   sin (3)               [INTRINSIC:TRIGONOMETRIC] Sine function
   sinh (3)              [INTRINSIC:TRIGONOMETRIC] Hyperbolic sine function
   size (3)              [INTRINSIC:ARRAY INQUIRY] Determine the size of an array
   sngl (3)              [INTRINSIC] Convert double precision real to default real
   spacing (3)           [INTRINSIC:MODEL_COMPONENTS] Smallest distance between two numbers of a given type
   spread (3)            [INTRINSIC:ARRAY CONSTRUCTION] Add a dimension to an array
   sqrt (3)              [INTRINSIC:MATHEMATICS] Square-root function
   storage_size (3)      [INTRINSIC:BIT INQUIRY] Storage size in bits
   sum (3)               [INTRINSIC] sum the elements of an array
   system_clock (3)      [INTRINSIC:SYSTEM ENVIRONMENT] Time function
   tan (3)               [INTRINSIC:TRIGONOMETRIC] Tangent function
   tanh (3)              [INTRINSIC:TRIGONOMETRIC] Hyperbolic tangent function
   this_image (3)        [INTRINSIC] Cosubscript index of this image
   tiny (3)              [INTRINSIC] Smallest positive number of a real kind
   trailz (3)            [INTRINSIC:BIT INQUIRY] Number of trailing zero bits of an integer
   transfer (3)          [INTRINSIC:BIT MANIPULATION] Transfer bit patterns
   transpose (3)         [INTRINSIC:ARRAY MANIPULATION] Transpose an array of rank two
   trim (3)              [INTRINSIC:CHARACTER] Remove trailing blank characters of a string
   ubound (3)            [INTRINSIC:ARRAY INQUIRY] Upper dimension bounds of an array
   ucobound (3)          [INTRINSIC] Upper codimension bounds of an array
   unpack (3)            [INTRINSIC:ARRAY CONSTRUCTION] Store the elements of a vector in an array of higher rank
   verify (3)            [INTRINSIC:CHARACTER] Scan a string for the absence of a set of characters

EXAMPLE
  Sample

   program fortran_syntax
   implicit none
   character(len=*),parameter :: ident="@(#)example(1f): example program"
   integer :: bb
   integer :: i_myloop
      call sub1(10,bb)
      write(*,*)'BB=',bb
   !-----------------------------------------------------------------------
   MYLOOP: do I_MYLOOP=1,10  ! DO loop
      cycle MYLOOP           ! start next pass of loop
      exit  MYLOOP           ! go to next statment after corresponding ENDDO
   enddo MYLOOP
   !-----------------------------------------------------------------------
   block
   character(LEN=1) :: c
   select case (c)
   case ('a' : 'j')
      write(*,*)  'One of the first ten letters'
   case ('l' : 'p', 'u' : 'y')
      write(*,*)  'One of l, m, n, o, p, u, v, w, x, y'
   case ('z', 'q' : 't')
      WRITE(*,*)  'One of z, q, r, s, t'
   case default
      write(*,*)  'Other characters, which may not be letters'
   endselect
   endblock
   !-----------------------------------------------------------------------
   CHAR: block
   ! ALLOCATABLE CHARACTER ARRAY
   character(len=80),allocatable :: help_text(:)
   integer                       :: i
   help_text=[ &
   &'12345678901234567890123456789012345678901234567890123456789012345678901234567890',&
   &'This is example help text for the example program                               ',&
   &'The example program uses kracken(3f) for command line parsing.                  ',&
   &'                                                                                ',&
   &'                                                                                ',&
   &'                                                                                ',&
   &'                                                                                ']
   WRITE(*,'(a)')(help_text(i),i=1,size(help_text))
   endblock CHAR
   !-----------------------------------------------------------------------

     contains

     subroutine sub1(a,b,c)
     integer,intent(in)                                 :: a
     integer,intent(out)                                :: b
     character(len=:),intent(out),allocatable,optional  :: c
        b=2*a
        if(present(c))then
           c='Hello World'
        endif
     end subroutine sub1

     integer function signum (n)
     !An integer signum function
     integer,intent(in) :: n
     select case (n)
     case  (:-1)  ;  signum  =  -1
     case  (0)    ;  signum  =   0
     case  (1:)   ;  signum  =   1
     end select
     end function signum

   end program fortran_syntax
