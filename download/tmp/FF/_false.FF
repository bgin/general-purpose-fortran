$ifdef TESTPRG90
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$DOCUMENT HELP -file _false.1.man
NAME
       _false(1f) - [FUNIX] do nothing, unsuccessfully

SYNOPSIS
       _false value [--help|--version--verbose]

DESCRIPTION
       Exit with a status code indicating failure.
OPTIONS
       number     optional number of 1 to 32, which
                  will be used to generate the exit
                  status code if supported.
       --help     display this help and exit
       --version  output version information and exit
       --verbose  display ASCII graphic of cockroach

EXAMPLE
      Bash example:

         _false || echo SHOULD PRINT THIS

         if _false
         then
            echo command got zero exit $?
         else
            echo command got non-zero exit $?
         fi

      Expected output::
         ERROR STOP
         SHOULD PRINT THIS
         ERROR STOP
         command got non-zero exit 1

SEE ALSO
       _true(1f)
$DOCUMENT END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$DOCUMENT VERSION
PRODUCT:        GPF (General Purpose Fortran) utilities and examples
PROGRAM:        _false(1f)
DESCRIPTION:    do nothing, unsuccessfully
VERSION:        1.0, 20170125
AUTHOR:         John S. Urban
$DOCUMENT END
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
program false
use M_kracken,       only : kracken, lget, iget
use M_messages,      only : junroach
use M_debug,         only : fstop
use iso_fortran_env, only : ERROR_UNIT        ! access computing environment
implicit none
integer :: ios, istop

call kracken('false',' -help .F. -version .F. -verbose .F.')
call help_usage(lget('false_help'))      ! if -help option is present, display help text and exit
call help_version(lget('false_version')) ! if -version option is present, display version text and exit
if(lget('false_verbose'))then
   call junroach('s')
endif

istop=iget('false_oo')

select case(istop)
case(1:32)
   call fstop(istop)
case default
   !!error stop ''              ! get error returned to system and produce no message (hopefully -- compiler dependent)
   !!error stop                 ! get error returned to system and produce no message (hopefully -- compiler dependent)
   close(ERROR_UNIT,iostat=ios) ! try to stop default message
   stop 1
end select

end program false
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$IFDEF UFPP_TEST
       This begins the section that will be processed by ufpp. Typically it is called by
       ufpp -system -html -i FILENAME
       if $SYSTEM commands are trusted

   UNIT TEST OF _false

        place unit test information in database
$SYSTEM goodbad _false start -section 1

        Execute program
$SYSTEM _false           || goodbad _false good -section 1 && goodbad _false bad -section 1
$SYSTEM _false --verbose || goodbad _false good -section 1 && goodbad _false bad -section 1
$ENDIF
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
