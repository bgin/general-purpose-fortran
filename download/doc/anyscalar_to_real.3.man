NAME
   anyscalar_to_real(3f) - [M_anything] convert integer or real parameter of any kind to real

SYNOPSIS
   pure elemental function anyscalar_to_real(valuein) result(r_out)

    class(*),intent(in)  :: valuein
    real                 :: r_out

DESCRIPTION

   This function uses polymorphism to allow input arguments of different types.
   It is used to create other procedures that can take
   many scalar arguments as input options.

OPTIONS

   VALUEIN  input argument of a procedure to convert to type REAL.
            May be of KIND kind=int8, kind=int16, kind=int32, kind=int64,
            kind=int128, kind=real32, kind=real64, kind=real128,
            or kind=real256
RESULTS

   R_OUT    The value of VALUIN converted to real (assuming it is actually
            in the range of type REAL).

EXAMPLE
  Sample program

    program demo_anyscalar_to_real
    program demo_anyscalar_to_double
    use M_anything,     only : int128, real256
    use iso_fortran_env, only : int8, int16, int32, int64
    use iso_fortran_env, only : real32, real64, real128
    implicit none
       ! call same function with many scalar input types
       write(*,*)squarei(2_int8)
       write(*,*)squarei(2_int16)
       write(*,*)squarei(2_int32)
       write(*,*)squarei(2_int64)
       write(*,*)squarei(2_int128)
       write(*,*)squarei(2_real32)
       write(*,*)squarei(2_real64)
       !!write(*,*)squarei(2_real128)
       write(*,*)squarei(2_real256)
    contains

    function squarei(invalue) result (dvalue)
    use M_anything, only : anyscalar_to_real
    implicit none
    class(*),intent(in)  :: invalue
    real                 :: invalue_local
    real                 :: dvalue
       invalue_local=anyscalar_to_real(invalue)
       dvalue=invalue_local*invalue_local
    end function squarei

    end program demo_anyscalar_to_real
