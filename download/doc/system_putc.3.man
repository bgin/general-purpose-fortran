NAME
SYNOPSIS
DESCRIPTION
EXAMPLE
Stream I/O on stdin and stdout

Fortran 2003 introduces stream I/O for Fortran; but does not
supply a way to make stdin and stdout stream files. One method
is to call C routines to do the I/O.

It is strongly suggested you not mix I/O between Fortran and C on the
same units.


! make Fortran/C interface for C routine getkey(3C)

character(len=1) :: function system_putc()

interface
   function private_putc(char) bind(c, name='putkeyC')
   use iso_c_binding
   implicit none
   integer(kind=c_int) :: private_putc
   character(kind=c_char) :: charout
   end function private_putc
end interface

system_putc=private_putc(char(charout,kind=c_char))
end function private_putc

function system_putc
character(len=1) :: function system_getc()

interface
   function private_getc() bind(c, name='getkeyC')
   use iso_c_binding
   implicit none
   integer(kind=c_char) :: private_getc
   end function private_getc
end interface

   system_getc=char(private_getc())

end function system_getc

program test_getkey
   use M_system, only : system_getc, system_putc
   character :: A
   integer :: icount
   icount=0
   istat=system_putc('|')
   do
      A=system_getc()
      icount=icount+1
      istat=system_putc(A)
      istat=system_putc('|')
      if(A.eq.'q')stop
      if(icount.gt.40)stop
   enddo
end program test_getkey
