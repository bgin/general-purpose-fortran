NAME

   decodebase(3f) - [M_strings] convert whole number string in base [2-36] to base 10 number

SYNOPSIS

  logical function decodebase(x,b,y)

   character(len=*),intent(in)  :: x
   integer,intent(in)           :: b
   integer,intent(out)          :: y

DESCRIPTION

   Convert a numeric string from base b to base 10. The function returns
   FALSE if b not in [2..36] or if string x contains invalid
   characters in base b or if result y is too big

   The letters A,B,...,Z represent 10,11,...,36 in the base > 10.

      Ref.: "Math matiques en Turbo-Pascal by
             M. Ducamp and A. Reverchon (2),
             Eyrolles, Paris, 1988".

   based on a F90 Version By J-P Moreau (www.jpmoreau.fr)

EXAMPLE
  Sample program:

   program demo_decodebase
   use M_strings, only : codebase, decodebase
   implicit none
   integer           :: ba,bd
   character(len=40) :: x,y
   integer           :: r

   print *,' BASE CONVERSION'
   write(*,'("Start   Base (2 to 36): ")',advance='no'); read *, bd
   write(*,'("Arrival Base (2 to 36): ")',advance='no'); read *, ba
   INFINITE: do
      print *,''
      write(*,'("Enter number in start base: ")',advance='no'); read *, x
      if(x.eq.'0') exit INFINITE
      if(decodebase(x,bd,r)) then
         if(codebase(r,ba,y)) then
           write(*,'("In base ",I2,": ",A20)')  ba, y
         else
           print *,'Error in coding number.'
         endif
      else
         print *,'Error in decoding number.'
      endif
   enddo INFINITE

   end program demo_decodebase

